package main

// Реализовать быструю сортировку массива (quicksort) встроенными методами языка.

import "fmt"

func main() {
	array := []int{1, 5, 4, 46, 5, 2, 3, 73, 3, 5, 7, 9, 32, 76, 83, 2, 65, 8, 2, 4, 53, 67, 16}

	arrSort := quicksort(array, 0, len(array)-1)
	fmt.Println(arrSort)
}

func quicksort(arr []int, first, last int) []int {
	l, r := first, last //делаем копии наших переданных крайних значений//мы можем сортировать определенный кусок массива
	piv := arr[(l+r)/2] //находим наше опорное значение от которого будем отталкиваться

	for l <= r { //Цикл, начинающий саму сортировку
		for arr[l] < piv { //Ищем значения больше 'центра'
			l++
		}
		for arr[r] > piv { //Ищем значения меньше 'центра'
			r--
		}

		if l <= r { //После прохода циклов проверяем счетчики циклов И если условие true, то меняем ячейки друг с другом.
			arr[l], arr[r] = arr[r], arr[l]
			l++
			r--
		}
	}
	if first < r { //если наш r больше первого заданого индекса в массиве то
		quicksort(arr, first, r) //делаем рекурсию но уже  берем часть массива с первого элемента по элемент по индексу r
	}
	if last > l { //тоже самое но если последний заданный элемент больше левого индекса
		quicksort(arr, l, last) // так же рекурсия с элемента на котором остановилсь по индексу l до последнего заданого
	}
	return arr
}
